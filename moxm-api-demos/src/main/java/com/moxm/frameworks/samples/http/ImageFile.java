package com.moxm.frameworks.samples.http;import android.util.Log;import java.io.ByteArrayInputStream;import java.io.ByteArrayOutputStream;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;/** * Depiction:SNS分享图片时使用该类判断图片类型 * <p> * Modify: * <p> * Author: Lynn * <p> * Create Date：2012-6-27 下午5:36:46 * <p> *  * @version 1.0 * @since 1.0 */public class ImageFile {	private final String TAG       = "ImageFile";	private final String MIME_JPEG = "image/jpeg";	private final String MIME_PNG  = "image/png";	private final String MIME_GIF  = "image/gif";	private File         file;	private String       paramname;	private String       name;	private byte[]       data;		/**	 * 构造函数	 * 	 * @param path	 *            图片路径	 */	public ImageFile(String path, String paramname) {		file = new File(path);		this.paramname = paramname;	}	/**	 * 构造函数	 * 	 * @param data	 * @param paramname	 *            图片路径	 */	public ImageFile(byte[] data, String paramname) {		this.paramname = paramname;		this.data = data;	}		/**	 * 构造函数	 * 	 * @param file	 *            图片文件对象	 */	public ImageFile(File file, String paramname) {		this.file = file;		this.paramname = paramname;	}		public void setName(String name) {		this.name = name;	}	/**	 * 获取图片的二进制数据	 * 	 * @return byte[]	 */	public byte[] getData() {		if(data == null){			data = getBytesFromFile(file);		}		return data;	}		public String getParamname() {		return paramname;	}	/**	 * 获取图片上传时的MIME类型	 * 	 * @return String	 */	public String getMIME() {		String type = null;		if(data != null){			byte[] bytes = new byte[8];			new ByteArrayInputStream(bytes, 0, 8);			type = getImageType(bytes);			return type;		}				if (null == file || !file.exists()) {			throw new RuntimeException("不存在该图片");		}		InputStream in = null;		try {			in = new FileInputStream(file);			byte[] bytes = new byte[8];			in.read(bytes);			type = getImageType(bytes);		} catch (IOException e) {			return null;		} finally {			try {				if (in != null) {					in.close();				}			} catch (IOException e) {			}		}		return type;	}		/**	 * 获取图片名	 * 	 * @return String	 */	public String getName() {		if(name != null && !name.equals("")){			return name;		}		if (data == null && (null == file || !file.exists())) {			throw new RuntimeException("不存在该图片");		}		return name == null || name.equals("") ? file.getName() : name;	}		/**	 * @param file	 * @return	 */	private byte[] getBytesFromFile(File file) {		byte[] data = null;		try {			if(data != null){				return data;			}			if (null == file || !file.exists()) {				throw new RuntimeException("不存在该图片");			}			FileInputStream in = new FileInputStream(file);			ByteArrayOutputStream out = new ByteArrayOutputStream(4096);			byte[] buf = new byte[4096];			int n;			while ((n = in.read(buf)) != -1) {				out.write(buf, 0, n);			}			in.close();			out.close();			data = out.toByteArray();		} catch (IOException e) {			Log.e(TAG, "get bytes from file process error!");		}		return data;	}		private String getImageType(byte[] bytes) {		if (isJPEG(bytes)) {			return MIME_JPEG;		}		if (isGIF(bytes)) {			return MIME_GIF;		}		if (isPNG(bytes)) {			return MIME_PNG;		}		return null;	}		private static boolean isJPEG(byte[] b) {		if (b.length < 2) {			return false;		}		return (b[0] == (byte) 0xFF) && (b[1] == (byte) 0xD8);	}		private static boolean isGIF(byte[] b) {		if (b.length < 6) {			return false;		}		return b[0] == 'G' && b[1] == 'I' && b[2] == 'F' && b[3] == '8' && (b[4] == '7' || b[4] == '9') && b[5] == 'a';	}		private static boolean isPNG(byte[] b) {		if (b.length < 8) {			return false;		}		return (b[0] == (byte) 137 && b[1] == (byte) 80 && b[2] == (byte) 78 && b[3] == (byte) 71 && b[4] == (byte) 13 && b[5] == (byte) 10 && b[6] == (byte) 26 && b[7] == (byte) 10);	}}